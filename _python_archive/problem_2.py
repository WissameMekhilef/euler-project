#!/usr/bin/env python3

# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2,
# the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
# even-valued terms.


def fibo(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        return fibo_with_memory(n - 1) + fibo_with_memory(n - 2)


def fibo_with_memory(n):
    global fibo_sequence
    if n in fibo_sequence:
        return fibo_sequence.get(n)
    else:
        fibo_sequence[n] = fibo(n)
        return fibo_sequence.get(n)


def main():
    print("Problem 2")

    max_value = 40000000000
    cumulative = 0
    i = 0

    f = fibo_with_memory(i)
    cumulative += f if (f % 2 == 0) else 0
    i += 1

    while f <= max_value:
        f = fibo_with_memory(i)
        cumulative += f if (f % 2 == 0) else 0
        i += 1

    print(cumulative)


fibo_sequence = {}
main()